"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const cucumber_1 = require("cucumber");
const protractor_1 = require("protractor");
let chai = require('chai').use(require('chai-as-promised'));
let expect = chai.expect;
let sleep = (ms => new Promise(resolve => setTimeout(resolve, ms)));
let sameCPF = ((elem, cpf) => elem.element(protractor_1.by.name('cpflist')).getText().then(text => text === cpf));
let sameName = ((elem, name) => elem.element(protractor_1.by.name('nomelist')).getText().then(text => text === name));
let sameProfile = ((elem, name) => elem.element(protractor_1.by.name('profile')).getText().then(text => text === name));
let sameNoticia = ((elem, name) => elem.element(protractor_1.by.name('noticialist')).getText().then(text => text === name));
let sameMeta = ((elem, meta) => elem.element(protractor_1.by.name('metalist')).getText().then(text => text === meta));
let sameDiscrepancia = ((elem, meta) => elem.element(protractor_1.by.name('discrepancias')).getText().then(text => text === meta));
cucumber_1.defineSupportCode(function ({ Given, When, Then }) {
    Given(/^Estou na pagina inicial$/, () => __awaiter(this, void 0, void 0, function* () {
        yield protractor_1.browser.get("http://localhost:4200/");
        yield expect(protractor_1.browser.getTitle()).to.eventually.equal('Recifree');
    }));
    Given(/^tem o nome "([^\"]*)" na tela$/, (adm) => __awaiter(this, void 0, void 0, function* () {
        var allalunos = protractor_1.element.all(protractor_1.by.name('profile'));
        yield allalunos;
        var sameProfile = allalunos.filter(elem => sameName(elem, adm));
    }));
    When(/^vou para a pagina de noticias"$/, () => __awaiter(this, void 0, void 0, function* () {
        yield protractor_1.element(protractor_1.by.buttonText('Noticias')).click();
        yield expect(protractor_1.browser.getTitle()).to.eventually.equal('Noticias');
    }));
    When(/^And preencho o campo "([^\"]*)" com valor "([^\"]*)"$/, (field, value) => __awaiter(this, void 0, void 0, function* () {
        yield protractor_1.$("input[name='" + field + "']").sendKeys(value);
    }));
    When(/^salvo a noticia$/, () => __awaiter(this, void 0, void 0, function* () {
        yield protractor_1.element(protractor_1.by.buttonText('Salvar')).click();
    }));
    Then(/^consigo ver o valor "([^\"]*)" na lista de noticias $/, (titulo) => __awaiter(this, void 0, void 0, function* () {
        var allalunos = protractor_1.element.all(protractor_1.by.name('noticiaslist'));
        yield allalunos;
        var samenoticia = allalunos.filter(elem => sameNoticia(elem, titulo));
        yield samenoticia;
        yield samenoticia.then(elems => expect(Promise.resolve(elems.length)).to.eventually.equal(1));
    }));
});
Scenario: fazer;
noticia;
com;
sucesso;
GUI;
Given;
Estou;
na;
pagina;
inicial;
And;
tem;
o;
nome;
"Administrador";
na;
tela;
When;
vou;
para;
a;
pagina;
de;
noticias;
And;
vou;
para;
a;
pagina;
de;
criar;
noticias;
And;
preencho;
o;
campo;
"titulo_noticia";
com;
valor;
"primeiro titulo";
And;
preencho;
o;
campo;
"descricao_noticia";
com;
valor;
"primeira descricao";
And;
preencho;
o;
campo;
"texto_noticia";
com;
valor;
"primeira noticia";
And;
salvo;
a;
noticia;
Then;
consigo;
ver;
a;
noticia;
na;
lista;
de;
noticias;
"noticias_list";
Scenario: fazer;
noticia;
sem;
estar;
logado;
como;
administrador;
GUI;
Given;
Estou;
na;
pagina;
inicial;
And;
nao;
tem;
o;
nome;
"Administrador";
na;
tela;
When;
vou;
para;
a;
pagina;
de;
noticias;
And;
vou;
para;
a;
pagina;
de;
criar;
noticias;
Then;
consigo;
ver;
uma;
mensagem;
de;
erro;
And;
vou;
para;
a;
pagina;
de;
login;
